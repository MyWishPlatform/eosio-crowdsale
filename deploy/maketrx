#!/bin/bash

tcleos="cleos -u http://127.0.0.1:8887"

if [[ $# != 3 ]]; then
	echo "Usage: $0 <private key of acc creator> <bytecode file path> <abi file path>"
	exit
fi

PRIVKEY=$1
BYTECODE=`xxd -plain $2`
BYTECODE=`echo $BYTECODE | tr -d " "`
ABI=`$tcleos set abi eosio $3 -jds 2>/dev/null | grep \"data\"`
ABI=${ABI:15:-1}

source deploy.cfg

function newaccount() {
	echo '	{
		"account": "eosio",
		"name": "newaccount",
		"authorization": [{
			"actor": "'$CREATOR'",
			"permission": "active"
		}],
		"data": "'$1'"
	}'
}
newaccount_data='{
	"creator": "'$CREATOR'",
	"name": "'$NEWACC'",
	"owner": {
		"threshold": 1,
		"keys": [],
		"accounts": [{
			"permission": {
				"actor": "'$CREATOR'",
				"permission": "active"
			},
			"weight": 1
		}],
		"waits": []
	},
	"active": {
		"threshold": 1,
		"keys": [],
		"accounts": [{
			"permission": {
				"actor": "'$CREATOR'",
				"permission": "active"
			},
			"weight": 1
		}],
		"waits": []
	}
}'

function delegatebw() {
    echo '	{
        "account": "eosio",
        "name": "delegatebw",
        "authorization": [{
            "actor": "'$CREATOR'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
delegatebw_data='{
	"from": "'$CREATOR'",
	"receiver": "'$NEWACC'",
	"stake_net_quantity": "'$DELEGATENET'",
	"stake_cpu_quantity": "'$DELEGATECPU'",
	"transfer": 0
}'

function buyrambytes() {
    echo '	{
        "account": "eosio",
        "name": "buyrambytes",
        "authorization": [{
            "actor": "'$CREATOR'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
buyrambytes_data='{
	"payer": "'$CREATOR'",
	"receiver": "'$NEWACC'",
	"bytes": '$RAMBYTES'
}'

function setcode() {
	echo '	{
        "account": "eosio",
        "name": "setcode",
        "authorization": [{
            "actor": "'$NEWACC'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
setcode_data='{
	"account": "'$NEWACC'",
	"vmtype": 0,
	"vmversion": 0,
	"code": "'$BYTECODE'"
}'

function setabi() {
	echo '	{
        "account": "eosio",
        "name": "setabi",
        "authorization": [{
            "actor": "'$NEWACC'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
setabi_data='{
	"account": "'$NEWACC'",
	"abi": "'$ABI'"
}'

function create() {
	echo '	{
        "account": "'$TOKEN'",
        "name": "create",
        "authorization": [{
            "actor": "'$TOKEN'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
create_data='{
	"issuer": "'$NEWACC'",
	"maximum_supply": "'$MAXSUPPLY'",
	"lock": '$LOCK'
}'

function init() {
	echo '	{
        "account": "'$NEWACC'",
        "name": "init",
        "authorization": [{
            "actor": "'$NEWACC'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
init_data='{
	"start": '$START',
	"finish": '$FINISH'
}'

function updateauth_owner() {
	echo '	{
        "account": "eosio",
        "name": "updateauth",
        "authorization": [{
            "actor": "'$NEWACC'",
            "permission": "owner"
        }],
		"data": "'$1'"
	}'
}
updateauth_owner_data='{
	"account": "'$NEWACC'",
	"permission": "owner",
	"parent": "",
	"auth": {
		"threshold": 1,
		"keys": [],
		"accounts": [{
			"permission": {
				"actor": "'$NEWACC'",
				"permission": "owner"
			},
			"weight": 1
		}],
		"waits": []
	}
}'

function updateauth_active() {
	echo '	{
        "account": "eosio",
        "name": "updateauth",
        "authorization": [{
            "actor": "'$NEWACC'",
            "permission": "active"
        }],
		"data": "'$1'"
	}'
}
updateauth_active_data='{
	"account": "'$NEWACC'",
	"permission": "active",
	"parent": "owner",
	"auth": {
		"threshold": 1,
		"keys": [],
		"accounts": [{
			"permission": {
				"actor": "'$NEWACC'",
				"permission": "active"
			},
			"weight": 1
		}],
		"waits": []
	}
}'

newaccount_data=`$tcleos convert pack_action_data eosio newaccount "$newaccount_data"`
delegatebw_data=`$tcleos convert pack_action_data eosio delegatebw "$delegatebw_data"`
buyrambytes_data=`$tcleos convert pack_action_data eosio buyrambytes "$buyrambytes_data"`
setcode_data=`$tcleos convert pack_action_data eosio setcode "$setcode_data"`
setabi_data=`$tcleos convert pack_action_data eosio setabi "$setabi_data"`
create_data=`$tcleos convert pack_action_data mywishtoken3 create "$create_data"`
init_data=`$tcleos convert pack_action_data mywishtest15 init "$init_data"`
updateauth_owner_data=`$tcleos convert pack_action_data eosio updateauth "$updateauth_owner_data"`
updateauth_active_data=`$tcleos convert pack_action_data eosio updateauth "$updateauth_active_data"`

IFS=""
TRXES=()
TRX='{"actions": ['
TRX+=`newaccount $newaccount_data`
TRX+=","
TRX+=`delegatebw $delegatebw_data`
TRX+=","
TRX+=`buyrambytes $buyrambytes_data`
TRX+="]}"
TRXES+=($TRX)
TRX='{"actions": ['
TRX+=`setcode $setcode_data`
TRX+=","
TRX+=`setabi $setabi_data`
TRX+=","
TRX+=`create $create_data`
TRX+=","
TRX+=`init $init_data`
TRX+=","
TRX+=`updateauth_owner $updateauth_owner_data`
TRX+=","
TRX+=`updateauth_active $updateauth_active_data`
TRX+="]}"
TRXES+=($TRX)
IFS=" "

TXES="["
for TRX in "${TRXES[@]}"; do
	TRX=`$tcleos push transaction "$TRX" -jds 2>/dev/null`
	TRX=`$tcleos sign "$TRX" -k $PRIVKEY 2>/dev/null`
	TRX=`$tcleos convert pack_transaction "$TRX" 2>/dev/null`
	TXES+="$TRX"
	TXES+=","
done
TXES=${TXES::-1}
TXES+="]"

echo $TXES
